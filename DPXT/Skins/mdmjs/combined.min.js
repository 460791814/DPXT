"use strict";var mdmApp=angular.module("mdmApp",["oc.lazyLoad","ui.router","ui.bootstrap","angular-loading-bar","ngMessages","angularUtils.directives.dirPagination","angular-sortable-view","ngzTree","angularShiro","ngCookies"]);angular.controllers=[],function(orig){mdmApp.controller=function(){if(arguments.length>1){var parts=arguments[0].split("?"),realControllerName=parts[0],queryParams=parts[1]||"";arguments[0]=realControllerName,angular.controllers.push({name:realControllerName,params:queryParams})}return orig.apply(null,arguments)}}(mdmApp.controller),mdmApp.constant("appConstants",{domain:"http://localhost:8080",loginUrl:"/account/authenticate",messageBoxIcons:{WARNING:"warning",INFO:"info",CRITICAL:"critical",QUESTION:"question"},pageSize:15}).factory("httpInterceptor",function($q,$injector,$log,$rootScope,appConstants,$cookies,$location){var showMsg=function(msg){$injector.get("$rootScope").$alert(appConstants.messageBoxIcons.CRITICAL,msg)},redirectToLogin=function(){$cookies.remove("sid"),$cookies.remove("rememberMe"),$location.path("/login")},interceptor={request:function(config){config.timeout=config.timeout||6e4;var isBusinessRequest=0==config.url.indexOf("$");if(isBusinessRequest&&(config.isBusinessRequest=isBusinessRequest,config.url=appConstants.domain+config.url.substring(1),"GET"==config.method&&config.params)){config.params=angular.copy(config.params);for(var i in config.params)i.toLowerCase()!=i&&(config.params[i.toLowerCase()]=config.params[i],delete config.params[i])}return config.withCredentials=!0,config},responseError:function(res){if(403==res.status)return redirectToLogin(),$q.reject(res);if(res&&res.data&&res.data.message)res.config.isBusinessRequest&&showMsg(res.data.message);else switch(res.status){case-1:showMsg("很抱歉，您无法与服务器建立连接，请检查网络。");break;case 401:showMsg("您没有授权访问这个资源。");break;case 404:showMsg("您要访问的资源不存在。");break;case 500:showMsg("服务发生内部错误，请您联系技术人员。");break;case 400:}return $q.reject(res)}};return interceptor}).config(["$stateProvider","$urlRouterProvider","$httpProvider","angularShiroConfigProvider","appConstants",function($stateProvider,$urlRouterProvider,$httpProvider,config,appConstants){config.setAuthenticateUrl(appConstants.domain+appConstants.loginUrl),$httpProvider.interceptors.push("httpInterceptor"),window.$stateProvider=$stateProvider,$urlRouterProvider.otherwise(function($injector,$location){return"/mdm/home"}),$stateProvider.state("mdm",{url:"/mdm",templateUrl:"views/main_template.html",controller:"mdm"}).state("login",{url:"/login",templateUrl:"login.html",controller:"mdm.login_index"})}]),mdmApp.run(function($rootScope,$injector,$location,$uibModal,$timeout,$http,$state,$cookies,appConstants,subject,authenticationResponseParser,accountService){function createStateAuto(controllerDefinition){var dotPath=controllerDefinition.name,params=controllerDefinition.params,parts=dotPath.split(".").filter(function(ele){return ele.trim().length>0});if(0!=parts.length){var controllerName="",url="";angular.forEach(parts,function(value,key){controllerName.length>0&&(controllerName+=".",url+="/"),controllerName+=value,url+=value;var state=$injector.get("$state").get(controllerName);if(null==state){var ctrlDef=angular.controllers.find(function(c){return c.name==controllerName});if(!ctrlDef||ctrlDef==controllerDefinition){var shouldAppendQueryParam=params.length>0&&controllerName==dotPath;state={templateUrl:"views/"+url+".html",url:"/"+value+(shouldAppendQueryParam?"?"+params:""),controller:controllerName},window.$stateProvider.state(controllerName,state)}}})}}$rootScope.$on("$locationChangeStart",function(event,next,current){var loginPage="/login"===$location.path(),sessionId=$cookies.get("sid");sessionId&&!subject.authenticated?accountService.getAccountInfo().then(function(response){var info=response.data;if(info){var infos=authenticationResponseParser.parse(info);subject.authenticationInfo=infos.authc,subject.authorizer.setAuthorizationInfo(infos.authz),subject.authenticated=!0,$rootScope.username=subject.getPrincipal().login}}).then(function(){loginPage&&$location.path("/")}):loginPage||sessionId?loginPage&&sessionId&&$location.path("/"):$location.path("/login")}),$rootScope.$on("$viewContentLoaded",function(){$(window).resize()}),$rootScope.$goByUiSref=function(uiSref){var bracketIndex=uiSref.indexOf("(");if(0>bracketIndex)return void $state.go(uiSref);var lastBracketIndex=uiSref.lastIndexOf(")"),stateName=uiSref.substring(0,bracketIndex),paramsInText=uiSref.substring(bracketIndex+1,lastBracketIndex),params=JSON.parse(paramsInText);$state.go(stateName,params)},$rootScope.$confirm=function(title,content,onlyOkBtn){function confirmModal($scope,appConstants){$scope.content=content||"Your content here!",$scope.title=title||"Your title",$scope.icon=appConstants.messageBoxIcons.QUESTION,$scope.onlyOkBtn=onlyOkBtn}var modalOptions={templateUrl:"views/common/confirm_modal.html",backdrop:"static",controller:confirmModal};return $uibModal.open(modalOptions).result},$rootScope.alerts=[],$rootScope.$alert=function(type,msg,timeout){function closeAlert(index){$rootScope.alerts.splice(index,1)}var timeout=timeout||3e3,alert={type:type,msg:msg,close:function(index){return closeAlert(index)},icon:function(){return"warning"==this.type?"fa fa-exclamation-circle":"error"==this.type?"fa fa-times-circle":"success"==this.type?"fa fa-check-circle":void 0}};$rootScope.alerts.push(alert),$timeout(function(){var index=$rootScope.alerts.indexOf(alert);index>=0&&closeAlert(index)},timeout)},$rootScope.$alertInfo=function(msg){$rootScope.$alert(appConstants.messageBoxIcons.INFO,msg)},$rootScope.$alertWarning=function(msg){$rootScope.$alert(appConstants.messageBoxIcons.WARNING,msg)},$rootScope.$alertError=function(msg){$rootScope.$alert(appConstants.messageBoxIcons.CRITICAL,msg)},angular.stateCreated||(angular.forEach(angular.controllers,function(value,key){createStateAuto(value)}),window.$stateProvider=null,angular.stateCreated=!0)}),mdmApp.controller("mdm",["$scope","subject","accountService","$cookies","$location",function($scope,subject,accountService,$cookies,$location){$scope.logout=function(){$scope.$confirm("注销","确定要退出学科网主数据管理系统吗？").then(function(){accountService.logout().then(function(response){response.data&&($cookies.remove("sid"),$cookies.remove("rememberMe"),$location.path("/login"))})})}}]).filter("gradeDivisionName",function(){var gradeDivision={G54:"五四制",G63:""};return function(gradeDivisionKey){return gradeDivision[gradeDivisionKey]}}),mdmApp.controller("mdm.login_index",function($rootScope,$scope,subject,usernamePasswordToken,$cookies,$state,accountService){$scope.token=usernamePasswordToken,$scope.token.rememberMe=!0,$scope.login=function(){subject.login(angular.copy($scope.token)).then(function(data){if(0==subject.authorizer.authorizationInfo.permissions.length&&0==subject.authorizer.authorizationInfo.roles.length)return accountService.logout(),void $rootScope.$alertError("用户有效，但未被授予任何权限，请联系您的管理员！");var sessionid=subject.authenticationInfo.credentials.token;if($rootScope.username=subject.getPrincipal().login,subject.remembered){var expireDate=new Date;expireDate.setDate(expireDate.getDate()+7),$cookies.put("sid",sessionid,{expires:expireDate})}else $cookies.put("sid",sessionid);$state.go("mdm.home")},function(data){$rootScope.$alertError(data.message)})}}),mdmApp.service("accountService",["$http",function($http){var services={};return services.getAccountInfo=function(){return $http.get("$/account/userinfo")},services.logout=function(){return $http.get("$/account/logout")},services}]),mdmApp.controller("mdm.application_index",function($log,$uibModal,$scope,applicationService){applicationService.getApplications().then(function(response){$scope.appList=response.data}),$scope.editMode="add",$scope.editApp={};var modalOptions={templateUrl:"views/mdm/application/edit.html",controller:"mdm.application_index.edit",scope:$scope};$scope.openAddWindow=function(){$scope.editApp={},$scope.editMode="add";$uibModal.open(modalOptions).result.then(function(result){$log.info(result),$scope.appList.push(result)})},$scope.openEditWindow=function(app){$scope.editMode="edit",$scope.editApp=angular.copy(app);$uibModal.open(modalOptions).result.then(function(result){angular.copy(result,app)})},$scope.trim=function(app){app.id=app.id.trim(),app.name=app.name.trim(),app.url&&(app.url=app.url.trim())},$scope.del=function(app){var index=$scope.appList.indexOf(app);$scope.$confirm("删除应用","您确定要删除应用["+app.name+"]吗？").then(function(modalResult){modalResult&&applicationService.deleteApplication(app.id).then(function(response){response.data?($scope.$alertInfo("删除成功！"),$scope.appList.splice(index,1)):$scope.$alertError("删除失败！")})})},$scope.translateStatus2Chinese=function(status){return status&&""!=status?"DISABLED"==status?"禁用":"正常":""}}).controller("mdm.application_index.edit",function($scope,applicationService){function saveOnSuccess(response){$scope.$alertInfo("保存成功！"),$scope.$close($scope.editApp)}$scope.submitForm=function(){$scope.appEditForm.$valid&&($scope.trim($scope.editApp),"add"==$scope.editMode?applicationService.addApplication($scope.editApp).then(saveOnSuccess):applicationService.updateApplication($scope.editApp).then(saveOnSuccess))}}).service("applicationService",function($http){var services={},resUrl="$/applications";return services.getApplications=function(){return $http.get(resUrl)},services.addApplication=function(app){return $http.post(resUrl,app)},services.updateApplication=function(app){return $http.put(resUrl,app)},services.deleteApplication=function(id){return $http["delete"](resUrl+"/"+id)},services}),mdmApp.controller("mdm.area_index",function($scope,areaService){function getFontCss(treeId,treeNode){return treeNode.highlight?{color:"#A60000","font-weight":"bold"}:{color:"#333","font-weight":"normal"}}function updateNodes(zTree,highlight){for(var len=$scope.nodeList.length,i=0;len>i;i++)$scope.nodeList[i].highlight=highlight,zTree.updateNode($scope.nodeList[i])}$scope.ztreeId="mdm_area_index",$scope.areaNodes=[],areaService.getAreas().then(function(response){var areaList=response.data;for(var idx in areaList){var area=areaList[idx];area.showName=area.shortName+" "+area.id}$scope.areaNodes=areaList}),$scope.setting={data:{key:{title:"name",name:"showName"},simpleData:{enable:!0,idKey:"id",pIdKey:"parentId"}},view:{showTitle:!0,fontCss:getFontCss}},$scope.nodeList=[],$scope._query="",$scope.search=function(keyEvent){if(!keyEvent||13==keyEvent.which){$scope.query=$scope._query.trim();var hasValidQuery=$scope.query&&$scope.query.length>0,treeObj=$.fn.zTree.getZTreeObj($scope.ztreeId);if(updateNodes(treeObj,!1),treeObj.hideNodes(treeObj.getNodes()),hasValidQuery){$scope.nodeList=treeObj.getNodesByParamFuzzy("showName",$scope.query,null);for(var shownNodesList=[],i=0;i<$scope.nodeList.length;i++){var node=$scope.nodeList[i];shownNodesList=shownNodesList.concat(node.getPath())}for(var i=0;i<shownNodesList.length;i++)treeObj.expandNode(shownNodesList[i],!0,!1);treeObj.showNodes(shownNodesList),updateNodes(treeObj,!0);for(var realShownNodes=treeObj.getNodesByParam("isHidden",!1),i=0;i<realShownNodes.length;i++){var node=realShownNodes[i];shownNodesList.indexOf(node)<0&&treeObj.hideNode(node)}}else{var allHiddenNodes=treeObj.getNodesByParam("isHidden",!0);treeObj.showNodes(allHiddenNodes),treeObj.expandAll(!1)}}},$scope["export"]=function(){csvExporter().exportJson($scope.areaNodes,!0,"地区")}}).service("areaService",function($http){var services={},resUrl="$/areas";return services.getAreas=function(){return $http.get(resUrl)},services}),mdmApp.controller("mdm.cache_index",function($scope,cacheService){$scope.params={key:"",pageSize:15},cacheService.getCacheKeys().then(function(response){$scope.cacheKeys=response.data.map(function(key){var ele={};return ele.value=key,ele.selected=!1,ele})}),$scope.toggleAll=function(){var toggleStatus=$scope.isAllSelected;angular.forEach($scope.filteredCacheKeys,function(item){item.selected=toggleStatus})},$scope.checkToggled=function(){$scope.isAllSelected=$scope.filteredCacheKeys.every(function(item){return item.selected})},$scope.filterCache=function(cacheKey){var key=$scope.params.key.trim(),flag=!0;return key&&(flag=cacheKey.value.indexOf(key)>-1),flag},$scope.delSelected=function(){var selectedKeys=[];if($scope.filteredCacheKeys.forEach(function(key){key.selected&&selectedKeys.push(key.value)}),0==selectedKeys.length)return void $scope.$alertInfo("请选择要删除的行！");var deleteKeys=selectedKeys.join(",");$scope.$confirm("删除缓存","您确定要删除选中的["+selectedKeys.length+"]项缓存吗？").then(function(modalResult){cacheService.deleteByKey(deleteKeys).then(function(response){$scope.$alertInfo("删除成功！"),$scope.cacheKeys=$scope.cacheKeys.filter(function(key){return!key.selected})})})},$scope.del=function(cacheKey){var index=$scope.cacheKeys.indexOf(cacheKey);$scope.$confirm("删除缓存","您确定要删除缓存["+cacheKey.value+"]吗？").then(function(modalResult){cacheService.deleteByKey(cacheKey.value).then(function(response){$scope.$alertInfo("删除成功！"),$scope.cacheKeys.splice(index,1)})})}}).service("cacheService",function($http){var services={},url="$/caches";return services.getCacheKeys=function(){return $http.get(url)},services.deleteByKey=function(key){return $http["delete"](url,{params:{key:key}})},services}),mdmApp.controller("mdm.chapter_index?tbId&tbName&returnUrl",function($scope,$state,$stateParams,textbookService,chapterService,$timeout){function retrieveNodes(){$scope.newNodes=[],$scope.removedNodes=[],$scope.modifiedNodes=[],chapterService.getNodesByTextbookId($scope.tbId).then(function(response){$scope.nodes=response.data,newNodeIndex=1,initialNodes()})}function needToSave(){return collectChanges(),0==$scope.newNodes.length&&0==$scope.modifiedNodes.length&&0==$scope.removedNodes.length?!1:!0}function initialNodes(){if($scope.nodes.unshift({id:0,parentId:"",name:$scope.tbName}),1==$scope.nodes.length){$scope.$alertWarning("我们发现教材目录是空的，特意为您准备了一些示例章节，请参考！");for(var i=1;3>=i;i++)$scope.nodes.push({id:getNewNodeIndex(),parentId:0,name:"新章"+i});for(var i=1;3>=i;i++){var nodeId=getNewNodeIndex();if($scope.nodes.push({id:nodeId,parentId:-1,name:"新节"+i}),1==i)for(var j=1;1>=j;j++)$scope.nodes.push({id:getNewNodeIndex(),parentId:nodeId,name:"新小节"+j})}}for(var idx in $scope.nodes)$scope.nodes[idx].open=!0;$timeout(collectChanges,300)}function getNewNodeIndex(){return-newNodeIndex++}function getFontCss(treeId,treeNode){return parseInt(treeNode.id)<0?{color:"#5cb85c"}:treeNode.changed?{color:"#d6963b"}:{color:"#333"}}function showRenameBtn(treeId,treeNode){return 0!=treeNode.id}function beforeDrag(treeId,treeNodes){for(var i=0,l=treeNodes.length;l>i;i++)if(0==treeNodes[i].id)return!1;return!0}function beforeDrop(treeId,treeNodes,targetNode,moveType){return 0==targetNode.id&&"inner"!=moveType?!1:targetNode?targetNode.drop!==!1:!0}function onDropNode(){$timeout(collectChanges)}function onRenameNode(event,treeId,treeNode,isCancel){$timeout(collectChanges)}function onRemoveNode(event,treeId,treeNode){if(parseInt(treeNode.id)>0&&($scope.removedNodes.push(treeNode.id),treeNode.isParent)){var zTree=$.fn.zTree.getZTreeObj($scope.ztreeId),allChildNodes=zTree.transformToArray(treeNode.children);angular.forEach(allChildNodes,function(node,key){parseInt(treeNode.id)>0&&$scope.removedNodes.push(node.id)})}$timeout(collectChanges)}function beforeEditName(treeId,treeNode){var zTree=$.fn.zTree.getZTreeObj(treeId);return zTree.selectNode(treeNode),!0}function beforeRemove(treeId,treeNode){var zTree=$.fn.zTree.getZTreeObj(treeId);return zTree.selectNode(treeNode),confirm("您确认要删除 【"+treeNode.name+"】 吗？")}function showRemoveBtn(treeId,treeNode){return 0!=treeNode.id}function beforeRename(treeId,treeNode,newName,isCancel){if(newName=newName.trim(),0==newName.length){alert("节点名称不能为空!");var zTree=$.fn.zTree.getZTreeObj(treeId);return setTimeout(function(){zTree.editName(treeNode)},10),!1}return $timeout(collectChanges),!0}function addHoverDom(treeId,treeNode){var sObj=$("#"+treeNode.tId+"_span");if(!(treeNode.editNameFlag||$("#addBtn_"+treeNode.tId).length>0)){var addStr="<span class='button add' id='addBtn_"+treeNode.tId+"' title='添加子节点' onfocus='this.blur();'></span>";sObj.after(addStr);var btn=$("#addBtn_"+treeNode.tId);btn&&btn.bind("click",function(){var zTree=$.fn.zTree.getZTreeObj(treeId),nodeName="新";switch(treeNode.level){case 0:nodeName+="章";break;case 1:nodeName+="节";break;default:nodeName+="小节"}nodeName+=treeNode.children?treeNode.children.length+1:1;var newNodes=zTree.addNodes(treeNode,{id:-newNodeIndex,pId:treeNode.id,name:nodeName});return newNodeIndex++,setTimeout(function(){zTree.editName(newNodes[0])},10),$timeout(collectChanges),!1})}}function removeHoverDom(treeId,treeNode){$("#addBtn_"+treeNode.tId).unbind().remove()}function collectChanges(){var zTree=$.fn.zTree.getZTreeObj($scope.ztreeId),nodes=zTree.transformToArray(zTree.getNodes());$scope.newNodes=[],$scope.modifiedNodes=[],angular.forEach(nodes,function(node,key){if(0!=node.id)if(parseInt(node.id)<0)$scope.newNodes.push(getDataFromTreeNode(node));else{var original=findInOrginalNodes(node.id),current=getDataFromTreeNode(node),changes=getDiff(original,current);changes.length>0?(node.changed=!0,zTree.updateNode(node),current.changes=changes,$scope.modifiedNodes.push(current)):(node.changed&&(node.changed=!1,zTree.updateNode(node)),current.changes=null)}})}function getDiff(node1,node2){var changes=[];return node1.name!=node2.name&&changes.push("名"),node1.parentId!=node2.parentId&&changes.push("父"),node1.ordinal!=node2.ordinal&&changes.push("序"),changes}function getDataFromTreeNode(node){return{id:node.id,name:node.name,parentId:node.getParentNode().id,textbookId:$scope.tbId,ordinal:node.getIndex()}}function findInOrginalNodes(id){return $scope.nodes.find(function(item){return item.id==id})}$scope.tbId=$stateParams.tbId,$scope.tbName=$stateParams.tbName,$scope.ztreeId="mdm_chapter_index",$scope.nodes=[],$scope.returnUrl=$stateParams.returnUrl?$stateParams.returnUrl:"mdm.textbook_index";var newNodeIndex=1;textbookService.getBookById($scope.tbId).then(function(response){var book=response.data;$scope.courseId=book.courseId}),$scope.goBack=function(){needToSave()?$scope.$confirm("保存提醒","您有未保存的数据，页面右下角有[保存]按钮哦！您忍心要离开吗？").then(function(){$scope.$goByUiSref($scope.returnUrl)}):$scope.$goByUiSref($scope.returnUrl)},$scope.goToKPointMapping=function(){var stateName="mdm.kpoint_mapping",params={tbId:$scope.tbId,tbName:$scope.tbName,courseId:$scope.courseId,returnUrl:$scope.returnUrl};needToSave()?$scope.$confirm("保存","您有未保存的数据，页面右下角有[保存]按钮哦！您忍心要离开吗？").then(function(){$state.go(stateName,params)}):$state.go(stateName,params)},retrieveNodes(),$scope.setting={data:{key:{name:"name"},simpleData:{enable:!0,idKey:"id",pIdKey:"parentId"}},view:{addHoverDom:addHoverDom,removeHoverDom:removeHoverDom,selectedMulti:!1,fontCss:getFontCss},edit:{enable:!0,showRemoveBtn:showRemoveBtn,showRenameBtn:showRenameBtn,renameTitle:"重命名",removeTitle:"删除"},callback:{onRename:onRenameNode,onRemove:onRemoveNode,beforeEditName:beforeEditName,beforeRemove:beforeRemove,beforeRename:beforeRename,beforeDrag:beforeDrag,beforeDrop:beforeDrop,onDrop:onDropNode}},$scope.saveChanges=function(){return collectChanges(),0==$scope.newNodes.length&&0==$scope.modifiedNodes.length&&0==$scope.removedNodes.length?void $scope.$alertWarning("目录树没有任何变化，无需保存！"):void $scope.$confirm("保存确认","请在变化统计中先确认您的修改。 您确定要保存对目录树的全部变化吗？").then(function(){var changes={newNodes:$scope.newNodes,modifiedNodes:$scope.modifiedNodes,removedNodes:$scope.removedNodes};chapterService.saveCatalogChanges($scope.tbId,changes).then(function(response){$scope.$alertInfo("保存成功！"),retrieveNodes()})})},$scope.resume=function(){$scope.nodes=angular.copy($scope.nodes),$scope.newNodes=[],$scope.removedNodes=[],$scope.modifiedNodes=[],newNodeIndex=1},$scope.refreshChanges=collectChanges,$scope.getNameById=function(id){var node=findInOrginalNodes(id);return node?node.name:null},$scope["export"]=function(){var zTree=$.fn.zTree.getZTreeObj($scope.ztreeId),nodes=zTree.transformToArray(zTree.getNodes()),nodeNames=[];angular.forEach(nodes,function(node,index){var row=[];row[parseInt(node.level)]="["+node.id+"] "+node.name,nodeNames.push(row)}),csvExporter().exportJson(nodeNames,!1,$scope.tbName+" - 教材目录")}}).service("chapterService",function($http){var pathTemplate="$/textbooks/{tbId}/catalogs",pathKPointsTemplate="$/textbooks/{tbId}/catalogs/kpoints",service={};return service.getNodesByTextbookId=function(tbId){var realPath=pathTemplate.replace("{tbId}",tbId);return $http.get(realPath)},service.saveCatalogChanges=function(tbId,changes){var realPath=pathTemplate.replace("{tbId}",tbId);return $http.put(realPath,changes)},service.getKPointsByTextbookId=function(tbId){var realPath=pathKPointsTemplate.replace("{tbId}",tbId);return $http.get(realPath)},service.saveKPointChanges=function(tbId,changes){var realPath=pathKPointsTemplate.replace("{tbId}",tbId);return $http.put(realPath,changes)},service}),mdmApp.controller("mdm.course_index?stageId",function($scope,$stateParams,$uibModal,$filter,courseService,stageService,subjectService){function showCourses(){courseService.getCourses().then(function(response){$scope.courses=response.data,$scope.allCourses=response.data,$scope.search()})}$scope.stages=[],$scope.subjects=[],$scope.allCourses=[],$scope.params={},stageService.getStages().then(function(response){$scope.stages=response.data,$scope.params.stageId=$stateParams.stageId?parseInt($stateParams.stageId):0}),$scope.search=function(){return 0==$scope.params.stageId?void($scope.courses=$scope.allCourses):void($scope.courses=$filter("filter")($scope.allCourses,{stageId:$scope.params.stageId}))},$scope.getReturnUrl=function(){return'mdm.course_index({"stageId":'+$scope.params.stageId+"})"},subjectService.getAll().then(function(data){$scope.subjects=data}),showCourses(),$scope.editMode="add",$scope.editCourse={};var modalOptions={templateUrl:"views/mdm/course/edit.html",controller:"mdm.course_index.edit",scope:$scope};$scope.openAddWindow=function(){$scope.editCourse={},$scope.editMode="add";$uibModal.open(modalOptions).result.then(function(result){$scope.allCourses.push(result),$scope.search()})},$scope.openEditWindow=function(course){$scope.editMode="edit",$scope.editCourse=angular.copy(course),$uibModal.open(modalOptions).result.then(function(result){var index=$scope.allCourses.indexOf(course);$scope.allCourses[index]=result,$scope.search()})},$scope.openSetVersionsWindow=function(course){$scope.editCourse=angular.copy(course),$uibModal.open({templateUrl:"views/mdm/course/setVersions.html",controller:"mdm.course_index.setVersions",size:"lg",resolve:{params:function(){return{course:angular.copy(course)}}}})},$scope.del=function(course){var index=$scope.allCourses.indexOf(course);$scope.$confirm("删除课程","您确定要删除课程["+course.name+"]吗？").then(function(modalResult){modalResult&&courseService.deleteCourse(course).then(function(response){response.data?($scope.$alertInfo("删除成功！"),$scope.allCourses.splice(index,1),$scope.search()):$scope.$alertError("删除失败！")})})},$scope.autoSort=function(){$scope.$confirm("重新排序","将按照学段和学科的排序自动计算所有课程的排序，您确定要重新排序吗?").then(function(){courseService.autoSort().then(function(response){$scope.allCourses=response.data})})}}).service("courseService",function($http,dpService,$q){var services={},resUrl="$/courses";return services.getCourses=function(){if(!services.courses)return $http.get(resUrl).then(function(response){return services.courses=response.data,{data:services.courses}});var manualResponse={data:services.courses};return $q.resolve(manualResponse)},services.getCourseById=function(courseId){return services.getCourses().then(function(response){var course=response.data.find(function(c){return c.id==courseId});return{data:course}})},services.getCoursesByDP=function(stageId){return services.getCourses().then(function(response){var courses=response.data.filter(function(c){return c.stageId==stageId&&dpService.allowed(c.stageId+":"+c.id)});return{data:courses}})},services.addCourse=function(course){return $http.post(resUrl,course)},services.updateCourse=function(course){return $http.put(resUrl+"/"+course.id,course)},services.deleteCourse=function(course){return $http["delete"](resUrl+"/"+course.id)},services.setVersions=function(courseId,versions){return $http.put(resUrl+"/"+courseId+"/textbookversions",versions)},services.getVersionsByCourseId=function(courseId){return $http.get(resUrl+"/"+courseId+"/textbookversions")},services.autoSort=function(){return $http.put(resUrl+"/autosort")},services}).controller("mdm.course_index.edit",["$filter","$scope","courseService",function($filter,$scope,courseService){function saveOnSuccess(response){$scope.$alertInfo("保存成功！"),$scope.$close($scope.editCourse)}$scope.submitForm=function(){$scope.courseEditForm.$valid&&("add"==$scope.editMode?courseService.addCourse($scope.editCourse).then(saveOnSuccess):courseService.updateCourse($scope.editCourse).then(saveOnSuccess))},$scope.updateChange=function(){var stageName="",subjectName="";$scope.editCourse.stageId&&(stageName=$filter("nameOfId")($scope.editCourse.stageId,$scope.stages)),$scope.editCourse.subjectId&&(subjectName=$filter("nameOfId")($scope.editCourse.subjectId,$scope.subjects)),$scope.editCourse.name=stageName+subjectName}}]).filter("nameOfId",function(){return function(input,list){var element=list.find(function(element){return element.id==input});return element&&element.name}}).controller("mdm.course_index.setVersions",function($scope,textbookVersionService,courseService,params){$scope.course=params.course,$scope.versions=[],textbookVersionService.getTextbookVersionsByCourseId($scope.course.id).then(function(resposne){$scope.course.versions=resposne.data}).then(function(){textbookVersionService.getTextbookVersions($scope.course.stageId).then(function(response){$scope.versions=response.data,$scope.versions.forEach(function(version){version.checked=$scope.course.versions.some(function(item){return item.id==version.id})})})}),$scope.selectedVersion=function(item){return!!item.checked},$scope.versionKeyWord="",$scope.listVersion=function(item){return!item.checked&&item.name.indexOf($scope.versionKeyWord)>=0},$scope.changeVersion=function(version){version.checked=!version.checked},$scope.submitForm=function(){var selectedVersions=$scope.versions.filter(function(item){return!!item.checked}),selectedVersionIds=selectedVersions.map(function(item){return item.id});courseService.setVersions($scope.course.id,selectedVersionIds).then(function(response){response.data?($scope.course.versions=selectedVersions,$scope.$close($scope.course),$scope.$alertInfo("设置教材版本成功")):$scope.$alertError("设置教材版本失败")})}}),angular.module("mdmApp").service("gradeService",function($http,$q){function isHighGrade(g){return g.id>=10&&g.id<=12}function isMiddleGrade(g){return g.id>=6&&g.id<=9}function isPrimaryGrade(g){return g.id<=6}var url="$/grades",services={},allGrades=null;return services.getGrades=function(noCache){return!noCache&&allGrades?$q.resolve({data:allGrades}):$http.get(url).then(function(response){return allGrades=response.data,response})},services.editGrade=function(mode,formData){return"add"==mode?$http.post(url,formData):$http.put(url,formData)},services.delGrade=function(gradeId){var delUrl=url+"/"+gradeId;return $http["delete"](delUrl)},services.getGradesByStageId=function(stageId){return services.getGrades().then(function(response){var grades=response.data;switch(stageId){case 2:grades=grades.filter(isPrimaryGrade);break;case 3:grades=grades.filter(isMiddleGrade);break;case 4:grades=grades.filter(isHighGrade);break;default:grades=[]}return{data:grades}})},services}),angular.module("mdmApp").controller("mdm.grade_index",["$log","$scope","$uibModal","gradeService","$stateParams","appConstants",function($log,$scope,$uibModal,gradeService,$stateParams,appConstants){function showModal(){$uibModal.open({templateUrl:"views/mdm/grade/edit.html",controller:"mdm.grade_index.edit",scope:$scope})}$scope.listGrades=function(){gradeService.getGrades(!0).then(function(response){$scope.grades=response.data})},$scope.listGrades(),$scope.pageChanged=function(pageNo){$log.info(pageNo),$scope.currentPage=pageNo,$scope.listGrades()},$scope.edit=function(grade){$scope.mode="add",$scope.grade={},grade&&($scope.mode="edit",$scope.grade=angular.copy(grade)),showModal()},$scope["delete"]=function(grade){$scope.$confirm("删除年级","警告！此操作不可恢复。您确定要删除年级 ["+grade.name+"]吗？").then(function(modalResult){modalResult&&gradeService.delGrade(grade.id).then(function(response){response.data?($scope.$alertInfo("删除成功！"),$scope.listGrades()):$scope.$alertError("删除失败！")})})},$scope.stageOptions=appConstants.stageOptions}]).controller("mdm.grade_index.edit",["$log","$scope","gradeService",function($log,$scope,gradeService){$scope.submitForm=function(){$scope.gradeForm.$valid&&gradeService.editGrade($scope.mode,$scope.grade).then(function(response){response.data&&($scope.$alertInfo("保存成功!"),$scope.$close(),$scope.listGrades())})}}]),mdmApp.controller("mdm.home",function($scope,userService,logService,dateService){userService.getCurrentUser().then(function(response){$scope.loginUser=response.data}),$scope.params={},$scope.params.currentpage=1,$scope.params.pagesize=10;var now=new Date;$scope.params.starttime=dateService.dateAdd("m",-3,angular.copy(now)),$scope.params.endtime=now,$scope.params.type="DATA",logService.getLogs($scope.params).then(function(response){$scope.logs=response.data.items})}),mdmApp.controller("mdm.kpoint_edit?courseId&courseName&returnUrl",function($scope,$stateParams,kpointService,$timeout){function retrieveNodes(){$scope.newNodes=[],$scope.removedNodes=[],$scope.modifiedNodes=[],kpointService.getNodesByCourseId($scope.courseId).then(function(response){$scope.nodes=response.data,newNodeIndex=1,$scope.nodes.unshift({id:0,parentId:"",name:$scope.courseName}),initialNodes();for(var idx in $scope.nodes)0==$scope.nodes[idx].parentId&&($scope.nodes[idx].open=!0);$timeout(collectChanges,300)})}function initialNodes(){if(1==$scope.nodes.length){$scope.$alertWarning("我们发现知识树是空的，特意为您准备了一些示例节点，请参考！");for(var i=1;3>=i;i++)$scope.nodes.push({id:getNewNodeIndex(),parentId:0,name:"一级知识点"+i});for(var i=1;3>=i;i++){var nodeId=getNewNodeIndex();if($scope.nodes.push({id:nodeId,parentId:-1,name:"二级知识点"+i}),1==i)for(var j=1;1>=j;j++)$scope.nodes.push({id:getNewNodeIndex(),parentId:nodeId,name:"三级知识点"+j})}}}function getNewNodeIndex(){return-newNodeIndex++}function addDiyDom(treeId,treeNode){treeNode.type||(treeNode.type="NODE");var target=$("#"+treeNode.tId+"_ico"),selectBox=$("#"+treeNode.tId+"_a").find(".type-select-box");selectBox.length>0&&selectBox.remove();var typeText="",typeClass="";switch(treeNode.type){case"KNOWLEDGE_POINT":typeText="知",typeClass="warning";break;case"TESTING_POINT":typeText="考",typeClass="primary";break;default:typeText="节",typeClass="normal"}var selectBoxHTML='<span class="type-select-box">            <span type="button" class="badge bottom-buttons '+typeClass+'" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">'+typeText+'</span>            <ul class="dropdown-menu">                <li><a enum-value="NODE" href="#">节点</a></li>                <li><a enum-value="KNOWLEDGE_POINT" href="#">知识点</a></li>                <li><a enum-value="TESTING_POINT" href="#">考点</a></li>            </ul>        </span>';target.after(selectBoxHTML),selectBox=target.parent();selectBox.find(".badge");selectBox.find(".dropdown-menu a").bind("click",function(e){e.preventDefault(),treeNode.type=$(this).attr("enum-value"),addDiyDom(treeId,treeNode),$timeout(collectChanges)})}function getFontCss(treeId,treeNode){return parseInt(treeNode.id)<0?{color:"#5cb85c"}:treeNode.changed?{color:"#d6963b"}:{color:"#333"}}function showRenameBtn(treeId,treeNode){return 0!=treeNode.id}function beforeDrag(treeId,treeNodes){for(var i=0,l=treeNodes.length;l>i;i++)if(0==treeNodes[i].id)return!1;return!0}function beforeDrop(treeId,treeNodes,targetNode,moveType){return 0==targetNode.id&&"inner"!=moveType?!1:targetNode?targetNode.drop!==!1:!0;
}function onDropNode(){$timeout(collectChanges)}function onRenameNode(event,treeId,treeNode,isCancel){$timeout(collectChanges)}function onRemoveNode(event,treeId,treeNode){if(parseInt(treeNode.id)>0&&($scope.removedNodes.push(treeNode.id),treeNode.isParent)){var zTree=$.fn.zTree.getZTreeObj($scope.ztreeId),allChildNodes=zTree.transformToArray(treeNode.children);angular.forEach(allChildNodes,function(node,key){parseInt(treeNode.id)>0&&$scope.removedNodes.push(node.id)})}$timeout(collectChanges)}function beforeEditName(treeId,treeNode){var zTree=$.fn.zTree.getZTreeObj(treeId);return zTree.selectNode(treeNode),!0}function beforeRemove(treeId,treeNode){var zTree=$.fn.zTree.getZTreeObj(treeId);return zTree.selectNode(treeNode),confirm("您确认要删除 【"+treeNode.name+"】 吗？")}function showRemoveBtn(treeId,treeNode){return 0!=treeNode.id}function beforeRename(treeId,treeNode,newName,isCancel){if(newName=newName.trim(),0==newName.length){alert("节点名称不能为空!");var zTree=$.fn.zTree.getZTreeObj(treeId);return setTimeout(function(){zTree.editName(treeNode)},10),!1}return $timeout(collectChanges),!0}function addHoverDom(treeId,treeNode){var sObj=$("#"+treeNode.tId+"_span");if(!(treeNode.editNameFlag||$("#addBtn_"+treeNode.tId).length>0)){var addStr="<span class='button add' id='addBtn_"+treeNode.tId+"' title='添加子节点' onfocus='this.blur();'></span>";sObj.after(addStr);var btn=$("#addBtn_"+treeNode.tId);btn&&btn.bind("click",function(){var zTree=$.fn.zTree.getZTreeObj(treeId),nodeName="新知识点";nodeName+=treeNode.children?treeNode.children.length+1:1;var newNodes=zTree.addNodes(treeNode,{id:-newNodeIndex,pId:treeNode.id,name:nodeName});return newNodeIndex++,setTimeout(function(){zTree.editName(newNodes[0])},10),$timeout(collectChanges),!1})}}function removeHoverDom(treeId,treeNode){$("#addBtn_"+treeNode.tId).unbind().remove()}function collectChanges(){var zTree=$.fn.zTree.getZTreeObj($scope.ztreeId),nodes=zTree.transformToArray(zTree.getNodes());$scope.newNodes=[],$scope.modifiedNodes=[],angular.forEach(nodes,function(node,key){if(0!=node.id)if(parseInt(node.id)<0)$scope.newNodes.push(getDataFromTreeNode(node));else{var original=findInOrginalNodes(node.id),current=getDataFromTreeNode(node);console.log(current);var changes=getDiff(original,current);changes.length>0?(node.changed=!0,zTree.updateNode(node),current.changes=changes,$scope.modifiedNodes.push(current)):(node.changed&&(node.changed=!1,zTree.updateNode(node)),current.changes=null)}})}function getDiff(node1,node2){var changes=[];return node1.name!=node2.name&&changes.push("名"),node1.parentId!=node2.parentId&&changes.push("父"),node1.ordinal!=node2.ordinal&&changes.push("序"),node1.type!=node2.type&&(changes.push("类"),console.log(node2.type)),changes}function getDataFromTreeNode(node){return{id:node.id,name:node.name,type:node.type,parentId:node.getParentNode().id,courseId:$scope.courseId,ordinal:node.getIndex()}}function findInOrginalNodes(id){return $scope.nodes.find(function(item){return item.id==id})}$scope.courseId=$stateParams.courseId,$scope.courseName=$stateParams.courseName,$scope.ztreeId="mdm_kpoint_edit",$scope.nodes=[],$scope.returnUrl=$stateParams.returnUrl?$stateParams.returnUrl:"mdm.kpoint_index";var newNodeIndex=1;retrieveNodes(),$scope.setting={data:{key:{name:"name"},simpleData:{enable:!0,idKey:"id",pIdKey:"parentId"}},view:{addHoverDom:addHoverDom,removeHoverDom:removeHoverDom,selectedMulti:!1,fontCss:getFontCss,addDiyDom:addDiyDom},edit:{enable:!0,showRemoveBtn:showRemoveBtn,showRenameBtn:showRenameBtn,renameTitle:"重命名",removeTitle:"删除"},callback:{onRename:onRenameNode,onRemove:onRemoveNode,beforeEditName:beforeEditName,beforeRemove:beforeRemove,beforeRename:beforeRename,beforeDrag:beforeDrag,beforeDrop:beforeDrop,onDrop:onDropNode}},$scope.recognize=function(){var zTree=$.fn.zTree.getZTreeObj($scope.ztreeId),nodes=zTree.transformToArray(zTree.getNodes());angular.forEach(nodes,function(node){if((!node.children||0==node.children.length)&&"NODE"==node.type){node.type="TESTING_POINT",addDiyDom($scope.ztreeId,node);var parentNode=node.getParentNode();parentNode.type="KNOWLEDGE_POINT",addDiyDom($scope.ztreeId,parentNode)}}),collectChanges()},$scope.goBack=function(){return collectChanges(),0==$scope.newNodes.length&&0==$scope.modifiedNodes.length&&0==$scope.removedNodes.length?void $scope.$goByUiSref($scope.returnUrl):void $scope.$confirm("保存提醒","您有未保存的数据，页面右下角有[保存]按钮哦！您忍心要离开吗？").then(function(){$scope.$goByUiSref($scope.returnUrl)})},$scope.saveChanges=function(){return collectChanges(),0==$scope.newNodes.length&&0==$scope.modifiedNodes.length&&0==$scope.removedNodes.length?void $scope.$alertWarning("知识树没有任何变化，无需保存！"):void $scope.$confirm("保存确认","请在变化统计中先确认您的修改。 您确定要保存对知识树的全部更改吗？").then(function(){var changes={newNodes:$scope.newNodes,modifiedNodes:$scope.modifiedNodes,removedNodes:$scope.removedNodes};kpointService.saveChanges($scope.courseId,changes).then(function(response){$scope.$alertInfo("保存成功！"),retrieveNodes()})})},$scope.resume=function(){$scope.nodes=angular.copy($scope.nodes),$scope.newNodes=[],$scope.removedNodes=[],$scope.modifiedNodes=[],newNodeIndex=1},$scope.refreshChanges=collectChanges,$scope.getNameById=function(id){var node=findInOrginalNodes(id);return node?node.name:null},$scope["export"]=function(){var zTree=$.fn.zTree.getZTreeObj($scope.ztreeId),nodes=zTree.transformToArray(zTree.getNodes()),nodeNames=[];angular.forEach(nodes,function(node,index){var row=[];row[parseInt(node.level)]="["+node.id+"] "+node.name,nodeNames.push(row)}),csvExporter().exportJson(nodeNames,!1,$scope.courseName+" - 知识树")}}),mdmApp.controller("mdm.kpoint_index",function($scope,stageService,courseService){stageService.getStagesByDP().then(function(response){$scope.stages=response.data,$scope.courses={},angular.forEach($scope.stages,function(stage,key){courseService.getCoursesByDP(stage.id).then(function(response){$scope.courses[stage.id]=response.data})})}),$scope.button_classes=["info","warning","success","danger","primary"]}).service("kpointService",function($http){var pathTemplate="$/courses/{courseId}/kpoints",service={};return service.getNodesByCourseId=function(courseId){var realPath=pathTemplate.replace("{courseId}",courseId);return $http.get(realPath)},service.saveChanges=function(courseId,changes){var realPath=pathTemplate.replace("{courseId}",courseId);return $http.put(realPath,changes)},service}),mdmApp.controller("mdm.log_index",["$rootScope","$scope","appConstants","logService","dateService",function($rootScope,$scope,appConstants,logService,dateService){$scope.params={},$scope.params.currentpage=1,$scope.params.pagesize=appConstants.pageSize,$scope.totalSize=0,$scope.totalPage=0,$scope.computeTime=function(){var now=new Date;switch($scope.selectedDateRange){case 1:$scope.params.starttime=dateService.dateAdd("w",-1,angular.copy(now)),$scope.params.endtime=now;break;case 2:$scope.params.starttime=dateService.dateAdd("m",-1,angular.copy(now)),$scope.params.endtime=now;break;case 3:$scope.params.starttime=dateService.dateAdd("m",-3,angular.copy(now)),$scope.params.endtime=now;break;case 4:$scope.params.starttime="",$scope.params.endtime=""}},$scope.dateRanges=[{id:1,text:"最近一周"},{id:2,text:"最近一个月"},{id:3,text:"最近三个月"},{id:4,text:"自定义时间"}],$scope.logTypes=[{id:"DATA",name:"数据"},{id:"USER",name:"用户"},{id:"SYS",name:"系统"}],$scope.selectedDateRange=1,$scope.computeTime(),$scope.st={opened:!1,open:function(){this.opened=!0}},$scope.et={opened:!1,open:function(){this.opened=!0}},$scope.searchLogs=function(keyEvent){return keyEvent&&13!=keyEvent.which?void 0:($scope.params.starttime||($scope.params.starttime=new Date),$scope.params.endtime||($scope.params.endtime=new Date),$scope.params.starttime.setHours(0,0,0,0),$scope.params.endtime.setHours(23,59,59,999),$scope.params.starttime>$scope.params.endtime?void $rootScope.$alertWarning("开始时间不能晚于结束时间"):void logService.getLogs($scope.params).then(function(response){$scope.logs=response.data.items,$scope.params.currentpage=response.data.currentPage,$scope.params.pagesize=response.data.pageSize,$scope.totalSize=response.data.totalSize,$scope.totalPage=response.data.totalPage}))},$scope.pageChanged=function(pageNo){$scope.params.currentpage=pageNo,$scope.searchLogs()},$scope.searchLogs()}]).service("logService",["$http",function($http){var logSrv={},logUrl="$/logs";return logSrv.getLogs=function(params){return $http.get(logUrl,{params:params})},logSrv}]).service("dateService",function(){var services={};return services.dateAdd=function(interval,number,date){switch(interval){case"y":return date.setFullYear(date.getFullYear()+number),date;case"q":return date.setMonth(date.getMonth()+3*number),date;case"m":return date.setMonth(date.getMonth()+number),date;case"w":return date.setDate(date.getDate()+7*number),date;case"d":return date.setDate(date.getDate()+number),date;case"h":return date.setHours(date.getHours()+number),date;case"m":return date.setMinutes(date.getMinutes()+number),date;case"s":return date.setSeconds(date.getSeconds()+number),date;default:return date.setDate(d.getDate()+number),date}},services}),mdmApp.controller("mdm.org_index",["$log","$scope","$uibModal","$q","appConstants","stageService","orgService",function($log,$scope,$uibModal,$q,appConstants,stageService,orgService){$scope.params={},$scope.params.currentpage=1,$scope.params.pagesize=appConstants.pageSize,$scope.totalSize=0,$scope.totalPage=0,$scope.searchOrgs=function(keyEvent){keyEvent&&13!=keyEvent.which||orgService.getOrgs($scope.params).then(function(response){$scope.orgs=response.data.items,$scope.params.currentpage=response.data.currentPage,$scope.params.pagesize=response.data.pageSize,$scope.totalSize=response.data.totalSize,$scope.totalPage=response.data.totalPage})},$q.all([orgService.getOrgTypes().then(function(response){$scope.orgTypes=response.data}),stageService.getStages().then(function(response){$scope.stages=response.data})]).then(function(){$scope.searchOrgs()}),$scope.getOrgTypeName=function(orgTypeId){var orgType=$scope.orgTypes.find(function(i){return i.id==orgTypeId});return orgType&&orgType.name},$scope.pageChanged=function(pageNo){$scope.params.currentpage=pageNo,$scope.searchOrgs()},$scope.openEditOrg=function(editOrg){$scope.org=angular.copy(editOrg),$uibModal.open({templateUrl:"views/mdm/org/edit.html",scope:$scope,backdrop:"static"})}}]).service("orgService",["$http","$q",function($http,$q){var orgSrv={},orgUrl="$/orgs",orgTypeUrl="$/orgtypes";return orgSrv.getOrgs=function(params){return $http.get(orgUrl,{params:params})},orgSrv.getAllPress=function(){return $http.get(orgUrl,{params:{typeid:8}}).then(function(response){return response.data.items})},orgSrv.getOrgTypes=function(){if(orgSrv.orgTypes){var manualResponse={data:orgSrv.orgTypes};return $q.resolve(manualResponse)}var orgTypesPromise=$http.get(orgTypeUrl);return orgTypesPromise.then(function(response){orgSrv.orgTypes=response.data}),orgTypesPromise},orgSrv}]),mdmApp.controller("mdm.permission_index?appId&appName",["$scope","permissionService","applicationService","$stateParams",function($scope,permissionService,applicationService,$stateParams){$scope.ztreeId="permission_index",$scope.settings={data:{simpleData:{enable:!0,idKey:"id",pIdKey:"parentId"}}},$scope.appId=$stateParams.appId,$scope.appName=$stateParams.appName;var param={appId:$scope.appId};permissionService.getPermissionTrees(param).then(function(response){$scope.permissionTree=response.data,angular.forEach($scope.permissionTree,function(value,key){value.open=!0,value.name=value.name+" - "+value.value})}),$scope["export"]=function(){csvExporter().exportJson($scope.permissionTree,!0,$scope.appName+"的权限定义树")}}]).service("permissionService",["$http",function($http){var services={},url="$/permissions";return services.getPermissionTrees=function(params){return $http.get(url,{params:params})},services}]),mdmApp.controller("mdm.role_index.data_permission",function($log,$scope,$q,stageService,courseService,permissionService,roleService){function createDataPermissionTree(){var tree=[];tree.push({id:0,name:$scope.appName+"数据",parentId:"",value:$scope.appId+".data",open:!0}),angular.forEach(stages,function(stage,idx){var stageNodeId="s"+stage.id;tree.push({id:stageNodeId,name:stage.name,parentId:0,value:stage.id+"",open:!0});var subCourses=courses.filter(function(c){return c.stageId==stage.id});angular.forEach(subCourses,function(course,idx){var courseNodeId="c"+course.id;tree.push({id:courseNodeId,name:course.name.replace(stage.name,""),parentId:stageNodeId,value:course.id+""})})}),$scope.permissionTree=tree}function saveOnSuccess(response){$scope.$alertInfo("保存成功！"),$scope.$close()}var stages=[],courses=[],promises=[],stagePromise=stageService.getStages().then(function(response){stages=response.data});promises.push(stagePromise);var coursePromise=courseService.getCourses().then(function(response){courses=response.data});promises.push(coursePromise),$q.all(promises).then(function(){$scope.permissionTree||createDataPermissionTree(),roleService.getPermissions($scope.editRole.id).then(function(response){$scope.exps=response.data})}),$scope.submitForm=function(){return 0==$scope.exps.length?void $scope.$alertError("权限不能为空！"):void roleService.setPermissions($scope.editRole.id,$scope.exps).then(saveOnSuccess)}}),mdmApp.controller("mdm.role_index?appId&appName&roleType",function($log,$scope,$uibModal,roleService,applicationService,$stateParams){$scope.appName=$stateParams.appName,$scope.appId=$stateParams.appId,$scope.roleType=$stateParams.roleType,roleService.getRoles($scope.appId,$scope.roleType).then(function(response){$scope.roles=response.data}),$scope.editMode="add",$scope.editRole={};var modalOptions={templateUrl:"views/mdm/role/edit.html",controller:"mdm.role_index.edit",scope:$scope};$scope.openAddWindow=function(){$scope.editRole={type:$scope.roleType},$scope.editMode="add",$scope.editRole.applicationId=$scope.appId;$uibModal.open(modalOptions).result.then(function(result){$scope.roles.push(result),$scope.openPermissionWindow(result)})},$scope.openEditWindow=function(role){$scope.editMode="edit",$scope.editRole=angular.copy(role);$uibModal.open(modalOptions).result.then(function(result){angular.copy(result,role)})},$scope.getEntityName=function(){return"MENU"==$scope.roleType?"角色":"数据范围"},$scope.openPermissionWindow=function(role){$scope.editRole=angular.copy(role);var modalOption={templateUrl:"views/mdm/role/edit_permission.html",controller:"MENU"==$scope.roleType?"mdm.role_index.menu_permission":"mdm.role_index.data_permission",scope:$scope,size:"lg",backdrop:"static"};$uibModal.open(modalOption)},$scope.trim=function(role){role.id=role.id.trim(),role.name=role.name.trim()},$scope.del=function(role){var index=$scope.roles.indexOf(role);$scope.$confirm("删除角色","您确定要删除["+role.name+"]吗？").then(function(modalResult){modalResult&&roleService.deleteRole(role.id).then(function(response){response.data?($scope.$alertInfo("删除成功！"),$scope.roles.splice(index,1)):$scope.$alertError("删除失败！")})})}}).service("roleService",["$http",function($http){var services={},resUrl="$/roles";return services.getRoles=function(appId,roleType){return $http.get("$/applications/"+appId+"/"+roleType+"/roles/")},services.addRole=function(role){return $http.post(resUrl,role)},services.updateRole=function(role){return $http.put(resUrl+"/"+role.id,role)},services.deleteRole=function(roleId){return $http["delete"](resUrl+"/"+roleId)},services.getPermissions=function(roleId){return $http.get(resUrl+"/"+roleId+"/permissions")},services.setPermissions=function(roleId,permissions){return $http.post(resUrl+"/"+roleId+"/permissions",permissions)},services.getFlakeId=function(){return $http.get(resUrl+"/flakeid")},services}]).controller("mdm.role_index.edit",["$log","$scope","roleService",function($log,$scope,roleService){function isAddMode(){return"add"==$scope.editMode}function saveOnSuccess(response){$scope.$alertInfo("保存成功！"),$scope.$close($scope.editRole)}isAddMode()&&roleService.getFlakeId().then(function(response){$scope.editRole.id=response.data}),$scope.submitForm=function(){$scope.roleEditForm.$valid&&($scope.trim($scope.editRole),isAddMode()?roleService.addRole($scope.editRole).then(saveOnSuccess):roleService.updateRole($scope.editRole).then(saveOnSuccess))}}]),mdmApp.controller("mdm.role_index.menu_permission",function($log,$scope,permissionService,roleService){function saveOnSuccess(response){$scope.$alertInfo("保存成功！"),$scope.$close()}permissionService.getPermissionTrees({appId:$scope.editRole.applicationId}).then(function(response){$scope.permissionTree=response.data,angular.forEach($scope.permissionTree,function(value,key){value.open=!0})}),roleService.getPermissions($scope.editRole.id).then(function(response){$scope.exps=response.data}),$scope.exps=[],$scope.submitForm=function(){return 0==$scope.exps.length?void $scope.$alertError("权限不能为空！"):void roleService.setPermissions($scope.editRole.id,$scope.exps).then(saveOnSuccess)}}),mdmApp.controller("mdm.stage_index",["$scope","stageService",function($scope,stageService){stageService.getStages().then(function(response){$scope.stages=response.data})}]).service("stageService",function($http,$q,dpService){var services={},stagesUrl="$/stages";return services.getStages=function(){if(!services.stages)return $http.get(stagesUrl).then(function(response){return services.stages=response.data.filter(function(item){return[2,3,4].indexOf(item.id)>-1}),{data:services.stages}});var manualResponse={data:services.stages};return $q.resolve(manualResponse)},services.getStagesByDP=function(){return services.getStages().then(function(response){var stages=response.data.filter(function(s){return dpService.allowed(s.id)});return{data:stages}})},services}).filter("stageSumName",function(stageService){return function(stageSum,defaultValue){var tempStages=[];return angular.forEach(stageService.stages,function(item,index){(item.value&stageSum)==item.value&&tempStages.push(item.name)}),0==tempStages.length&&defaultValue?defaultValue:tempStages.join(",")}}),mdmApp.controller("mdm.subject_index",["$log","$scope","$uibModal","subjectService","appConstants",function($log,$scope,$uibModal,subjectService,appConstants){subjectService.getAll().then(function(subjects){$scope.subjects=subjects}),$scope.openEditSubject=function(editRole){var copy={};editRole&&angular.copy(editRole,copy),$scope.subject=copy,$scope.editMode=editRole?"edit":"add",$uibModal.open({templateUrl:"views/mdm/subject/edit.html",controller:"mdm.subject_index.edit",scope:$scope}).result.then(function(rltRole){"edit"==$scope.editMode?angular.copy(rltRole,editRole):$scope.subjects.push(rltRole)})},$scope.del=function(subject){$scope.$confirm("删除确认","您确定要删除学科【"+subject.name+"】吗?").then(function(){subjectService.del(subject.id).then(function(){var index=$scope.subjects.indexOf(subject);$scope.subjects.splice(index,1),$scope.$alertInfo("删除成功！")})})}}]).controller("mdm.subject_index.edit",["$log","$scope","subjectService",function($log,$scope,subjectService){$scope.submitForm=function(){if(!$scope.form.$invalid){var p;p="add"==$scope.editMode?subjectService.add($scope.subject):subjectService.update($scope.subject),p.then(function(d){$scope.$alertInfo("保存成功!"),d&&$scope.$close($scope.subject)})}}}]),mdmApp.service("subjectService",["$log","appConstants","$http",function($log,appConstants,$http){var srv={},url="$/subjects";return srv.getAll=function(){return $http.get(url).then(function(response){return response.data})},srv.get=function(id){return $http.get(url+"/"+id).then(function(response){return response.data})},srv.add=function(subject){return $http.post(url,subject).then(function(response){return response.data})},srv.del=function(id){return $http["delete"](url+"/"+id).then(function(response){return response.data})},srv.update=function(subject){return $http.put(url+"/"+subject.id,subject).then(function(response){return response.data})},srv}]),mdmApp.controller("mdm.tags_index",["$log","$scope","$uibModal","appConstants",function($log,$scope,$uibModal,appConstants){$scope.tags=[{id:"1",tagName:1,description:"描述信息1"},{id:"2",tagName:2,description:"描述信息2"},{id:"3",tagName:3,description:"描述信息3"},{id:"4",tagName:4,description:"描述信息4"},{id:"5",tagName:5,description:"描述信息5"},{id:"6",tagName:6,description:"描述信息6"}]}]),mdmApp.controller("mdm.kpoint_mapping?tbId&courseId&tbName&returnUrl",function($scope,$state,$stateParams,courseService,chapterService,$timeout,kpointService){function retrieveNodes(){chapterService.getNodesByTextbookId($scope.tbId).then(function(response){var catalogNodes=response.data;return 0==catalogNodes.length?void $scope.$confirm("提示","当前的教材目录是空的，请先设置教材的目录！",!0).then(function(){$state.go("mdm.chapter_index",{tbId:$scope.tbId,tbName:$scope.tbName,returnUrl:$scope.returnUrl})}):void chapterService.getKPointsByTextbookId($scope.tbId).then(function(response){$scope.mappings=response.data,angular.forEach(catalogNodes,function(node,index){node.tags=getOriginalTags(node.id),node.open=!0}),$scope.catalogNodes=catalogNodes})}),kpointService.getNodesByCourseId($scope.courseId).then(function(response){$scope.kpointNodes=response.data,angular.forEach($scope.kpointNodes,function(node,index){0==node.parentId&&(node.open=!0)})})}function getCatalogTreeFontCss(treeId,treeNode){return treeNode.modified?{color:"#d6963b"}:{color:"#333"}}function zTreeCatalogOnClick(event,treeId,treeNode){var treeObj=$.fn.zTree.getZTreeObj($scope.ztreeKPoint);treeObj.cancelSelectedNode(),setTagsBoxPosition(treeNode)}function setTagsBoxPosition(treeNode){var treeNode=$("#"+treeNode.tId);if(0!=treeNode.find(".tags-box").length){var winHeight=$(window).height(),targetTop=treeNode.offset().top,targetBoxHeight=treeNode.find(".dropdown-menu").height()+22;targetTop+targetBoxHeight>winHeight?treeNode.find(".timeline-panel").css("margin-top","-"+(targetBoxHeight-42)+"px").addClass("timeline-panel-top"):treeNode.find(".timeline-panel").css("margin-top","0").removeClass("timeline-panel-top")}}function getOriginalTags(catalogId){var maps=$scope.mappings.filter(function(map){return map.catalogId==catalogId}),tags=[];return angular.forEach(maps,function(map){tags.push({id:map.kpointId,name:map.kpointName})}),tags}function addDiyDom(treeId,treeNode){if(treeNode.tags){var target=$("#"+treeNode.tId+"_a");if(target.next(".tags-box").length>0&&(target.next(".tags-box").remove(),target.find(".badge").remove()),0!=treeNode.tags.length){for(var newTagHtml='<span class="text-success-ztree">New!</span>',badgeBgColorClass=treeNode.modified?"label-modified":"",badge='<span class="badge '+badgeBgColorClass+'">'+treeNode.tags.length+"</span>",tagsWrapper=$('<span class="tags-box"></span>'),tmp='<div class="timeline-panel"><div class="dropdown-menu"><span class="tags-close-btn"><i class="fa fa-times-circle"></i></span><h4 class="text-center" style="font-weight:bold">知识点列表</h4><div class="divider"></div><ul>',originalTags=getOriginalTags(treeNode.id),i=0;i<treeNode.tags.length;i++){var tag=treeNode.tags[i],oldTag=originalTags.find(function(t){return t.id==tag.id}),isNew=!0;oldTag&&(isNew=!1),tmp+='<li class="tags" kpid="'+tag.id+'" kpname="'+tag.name+'"><a href="javascript:"><span style="cursor: move;display:block;">'+tag.name+(isNew?newTagHtml:"")+'</span><span data-role="remove"></span></a></li>'}tmp+='</ul><div class="divider"></div><ul class="clear-only"><li><a href="javascript:" class="clear-tags"><i class="fa fa-trash"></i> 清空</a></li></ul></div>',target.append(badge),target.after(tagsWrapper.html(tmp)),tagsWrapper.on("click",".clear-tags",function(){treeNode&&treeNode.tags&&$scope.$confirm("清除目录上的知识点","您确定要删除当前目录上关联的所有知识点吗？").then(function(){treeNode.tags=[],onNodeModified(treeNode)})}),setTagsBoxPosition(treeNode),tagsWrapper.on("click",".tags-close-btn",function(){var treeObj=$.fn.zTree.getZTreeObj($scope.ztreeCatolog);treeObj.cancelSelectedNode()}),tagsWrapper=tagsWrapper.find(".dropdown-menu ul:first"),void 0!==tagsWrapper.attr("data-listidx")?tagsWrapper.dragsort("destroy"):tagsWrapper.dragsort({dragSelector:"li.tags",placeHolderTemplate:"<li style='display:block;border:1px dotted #ccc;height:26px;'></li>",dragEnd:function(){rebuildTagArray(treeNode),onNodeModified(treeNode)}}),tagsWrapper.on("click",'span[data-role="remove"]',function(){$(this).closest("li").remove(),rebuildTagArray(treeNode),onNodeModified(treeNode)})}}}function onNodeModified(node){var originalTags=getOriginalTags(node.id);node.modified=JSON.stringify(node.tags)!=JSON.stringify(originalTags);var ztree=$.fn.zTree.getZTreeObj($scope.ztreeCatolog);ztree.updateNode(node),addDiyDom($scope.ztreeCatolog,node)}function rebuildTagArray(treeNode){var target=$("#"+treeNode.tId+"_a"),tags=[],tagLi=target.next(".tags-box").find("li.tags");angular.forEach(tagLi,function(li){tags.push({id:parseInt($(li).attr("kpid")),name:$(li).attr("kpname")})}),treeNode.tags=tags}function getTargetNode(){var nodes=$.fn.zTree.getZTreeObj($scope.ztreeCatolog).getSelectedNodes();return 0==nodes.length?null:nodes[0]}function getKPointFontCss(treeId,treeNode){return treeNode.highlight?{color:"#A60000","font-weight":"bold"}:treeNode.children&&0!=treeNode.children.length?treeNode.children&&treeNode.children.length>0&&(!treeNode.children[0].children||0==treeNode.children[0].children.length)?{color:"#D69023","font-weight":"normal"}:{color:"#333","font-weight":"normal"}:{color:"#168CF3","font-weight":"normal"}}function addHoverDom(treeId,treeNode){var sObj=$("#"+treeNode.tId+"_span");if(!(treeNode.editNameFlag||$("#addBtn_"+treeNode.tId).length>0)){var isAddMode=!0,targetNode=getTargetNode();if(targetNode&&targetNode.tags){var existedTag=targetNode.tags.find(function(t){return t.id==treeNode.id});existedTag&&(isAddMode=!1)}var addStr="<span class='button add' id='addBtn_"+treeNode.tId+"' title='关联' onfocus='this.blur();'></span>",removeStr="<span class='button remove' id='addBtn_"+treeNode.tId+"' title='取消关联' onfocus='this.blur();'></span>",html=isAddMode?addStr:removeStr;sObj.after(html);var btn=$("#addBtn_"+treeNode.tId);btn&&btn.bind("click",function(){var targetNode=getTargetNode();if(null==targetNode)return void alert("请先在目录上选择一个节点！");targetNode.tags||(targetNode.tags=[]);var existedTag=targetNode.tags.find(function(t){return t.id==treeNode.id});if(existedTag){var index=targetNode.tags.indexOf(existedTag);targetNode.tags.splice(index,1)}else targetNode.tags.push({id:parseInt(treeNode.id),name:treeNode.name});return onNodeModified(targetNode),removeHoverDom(treeId,treeNode),!1})}}function removeHoverDom(treeId,treeNode){$("#addBtn_"+treeNode.tId).unbind().remove()}function updateNodes(zTree,highlight){for(var len=$scope.nodeList.length,i=0;len>i;i++)$scope.nodeList[i].highlight=highlight,zTree.updateNode($scope.nodeList[i])}$scope.tbId=$stateParams.tbId,$scope.tbName=$stateParams.tbName,$scope.courseId=$stateParams.courseId,$scope.returnUrl=$stateParams.returnUrl?$stateParams.returnUrl:"mdm.textbook_index",$scope.ztreeCatolog="ztreeCatolog",$scope.ztreeKPoint="ztreeKPoint",courseService.getCourseById($scope.courseId).then(function(response){$scope.courseName=response.data.name}),$scope.usedKPointId=[],retrieveNodes();var dataSetting={key:{name:"name"},simpleData:{enable:!0,idKey:"id",pIdKey:"parentId"}};$scope.catalogSetting={data:dataSetting,view:{addDiyDom:addDiyDom,selectedMulti:!1,fontCss:getCatalogTreeFontCss},callback:{onClick:zTreeCatalogOnClick}},$scope.kpointSetting={data:dataSetting,view:{fontCss:getKPointFontCss,addHoverDom:addHoverDom,removeHoverDom:removeHoverDom,selectedMulti:!1}},$scope.nodeList=[],$scope._query="",$scope.search=function(keyEvent){$scope.query=$scope._query.trim();var hasValidQuery=$scope.query&&$scope.query.length>0,treeObj=$.fn.zTree.getZTreeObj($scope.ztreeKPoint);if(updateNodes(treeObj,!1),treeObj.hideNodes(treeObj.getNodes()),hasValidQuery){$scope.nodeList=treeObj.getNodesByParamFuzzy("name",$scope.query,null);for(var shownNodesList=[],i=0;i<$scope.nodeList.length;i++){var node=$scope.nodeList[i];shownNodesList=shownNodesList.concat(node.getPath())}if(shownNodesList.length<100)for(var i=0;i<shownNodesList.length;i++)treeObj.expandNode(shownNodesList[i],!0,!1);treeObj.showNodes(shownNodesList),updateNodes(treeObj,!0);for(var realShownNodes=treeObj.getNodesByParam("isHidden",!1),i=0;i<realShownNodes.length;i++){var node=realShownNodes[i];shownNodesList.indexOf(node)<0&&treeObj.hideNode(node)}}else{var allHiddenNodes=treeObj.getNodesByParam("isHidden",!0);treeObj.showNodes(allHiddenNodes)}},$scope.resume=function(){$scope.catalogNodes=angular.copy($scope.catalogNodes)},$scope.goBack=function(){$scope.$confirm("保存提醒","页面右下角有[保存]按钮哦，不忘要忘记保存您的操作！您确定要离开吗？").then(function(){$scope.$goByUiSref($scope.returnUrl)})},$scope.saveChanges=function(){var treeObj=$.fn.zTree.getZTreeObj($scope.ztreeCatolog),nodes=treeObj.transformToArray(treeObj.getNodes()),mappings=[];angular.forEach(nodes,function(node,key){node.tags&&angular.forEach(node.tags,function(tag,index){mappings.push({catalogId:node.id,kpointId:tag.id,kpointName:tag.name,ordinal:index})})}),chapterService.saveKPointChanges($scope.tbId,mappings).then(function(response){$scope.$alertInfo("保存成功！")})},$scope["export"]=function(){var zTree=$.fn.zTree.getZTreeObj($scope.ztreeCatolog),nodes=zTree.transformToArray(zTree.getNodes()),nodeNames=[];angular.forEach(nodes,function(node,index){var row=[];if(row[parseInt(node.level)]=node.name,node.tags&&node.tags.length>0){var tags="";for(var idx in node.tags)tags+=(parseInt(idx)?"|":":")+node.tags[idx].name;row[row.length]=tags}nodeNames.push(row)}),csvExporter().exportJson(nodeNames,!1,$scope.tbName+" - 目录及知识点")}}),mdmApp.controller("mdm.textbook_index.edit",function($scope,stageService,gradeService,textbookService,courseService,param){function saveOnSuccess(response){$scope.$alertInfo("保存成功！");var id="add"==$scope.editMode?response.data.id:$scope.editBook.id;textbookService.getBookById(id).then(function(newResponse){$scope.$close(newResponse.data)},function(){$scope.$alertError("刷新数据失败，请手动刷新列表！");var book="add"==$scope.editMode?response.data:$scope.editBook;$scope.$close(book)})}$scope.editMode=param.editMode,$scope.editBook=param.editBook,$scope.editBook.term||($scope.editBook.term=""),courseService.getCourses().then(function(response){if($scope.courses=response.data,"edit"==$scope.editMode){var course=$scope.courses.find(function(c){return c.id==$scope.editBook.courseId});null!=course&&($scope.stageId=course.stageId)}else $scope.stageId=4;$scope.refreshGradesByStageId(),$scope.onCourseChanged()}),$scope.grades=[],stageService.getStages().then(function(response){$scope.stages=response.data}),$scope.onStageChanged=function(){$scope.refreshGradesByStageId()},$scope.onCourseChanged=function(){$scope.editBook.courseId&&""!=$scope.editBook.courseId?courseService.getVersionsByCourseId($scope.editBook.courseId).then(function(response){$scope.versions=response.data}):$scope.versions=[]},$scope.refreshGradesByStageId=function(){gradeService.getGradesByStageId($scope.stageId).then(function(response){$scope.grades=response.data})},$scope.checkGradeRequired=function(){return 2==$scope.stageId||3==$scope.stageId},$scope.submitForm=function(){$scope.editForm.$valid&&(""==$scope.editBook.term&&delete $scope.editBook.term,"add"==$scope.editMode?textbookService.add($scope.editBook).then(saveOnSuccess):textbookService.update($scope.editBook).then(saveOnSuccess))},$scope.autoCompleteName=function(){var name="",courseName="";if($scope.editBook.courseId){var course=$scope.courses.find(function(c){return c.id==$scope.editBook.courseId});course&&(courseName=course.name)}var versionName="";if($scope.editBook.versionId){var version=$scope.versions.find(function(v){return v.id==$scope.editBook.versionId});version&&(versionName=version.name)}var volume=$scope.editBook.volume,gradeName="";if($scope.editBook.gradeId){var grade=$scope.grades.find(function(g){return g.id==$scope.editBook.gradeId});grade&&(gradeName=grade.name)}var termName="";$scope.editBook.term&&(termName=textbookService.getTermName($scope.editBook.term)),name=courseName+versionName+(volume?volume:gradeName+termName),
$scope.editBook.name=name}}),mdmApp.controller("mdm.textbook_index?stageId&courseId&versionId&keywords&pageIndex",function($scope,$state,$stateParams,stageService,gradeService,textbookService,courseService,appConstants,$uibModal){function refreshCoursesByStageId(){courseService.getCoursesByDP($scope.params.stageId).then(function(response){$scope.courses=response.data,$stateParams.courseId?($scope.params.courseId=parseInt($stateParams.courseId),$stateParams.courseId=null):$scope.params.courseId=$scope.courses[0].id,$scope.onCourseChanged()})}$scope.totalSize=0,$scope.params={pageSize:appConstants.pageSize,currentPage:1},$stateParams.pageIndex&&($scope.params.currentPage=parseInt($stateParams.pageIndex)),$scope.books=[],$scope.params.nameKeyword=$stateParams.keywords,$scope.grades=[],stageService.getStagesByDP().then(function(response){$scope.stages=response.data,$scope.params.stageId=$stateParams.stageId?parseInt($stateParams.stageId):$scope.stages[$scope.stages.length-1].id,$scope.onStageChanged()}),$scope.onStageChanged=function(){refreshCoursesByStageId()},$scope.onCourseChanged=function(){courseService.getVersionsByCourseId($scope.params.courseId).then(function(response){$scope.versions=response.data,$stateParams.versionId&&($scope.params.versionId=parseInt($stateParams.versionId),$stateParams.versionId=null),$scope.onVersionChanged()})},$scope.onVersionChanged=function(){$scope.retrieveBooks()},$scope.getReturnUrl=function(){var params={};return params.stageId=$scope.params.stageId,params.courseId=$scope.params.courseId,params.versionId=$scope.params.versionId,params.keywords=$scope.params.nameKeyword,params.pageIndex=$scope.params.currentPage,"mdm.textbook_index("+JSON.stringify(params)+")"},$scope.retrieveBooks=function(keyEvent){keyEvent&&13!=keyEvent.which||textbookService.getAllBooks($scope.params).then(function(response){var pagination=response.data;$scope.books=pagination.items,$scope.params.currentPage=pagination.currentPage,$scope.params.pageSize=pagination.pageSize,$scope.totalSize=pagination.totalSize,$scope.totalPage=pagination.totalPage})},$scope.pageChanged=function(newPageNum){$scope.params.currentPage=newPageNum,$scope.retrieveBooks()},$scope.deleteBook=function(book){var index=$scope.books.indexOf(book);$scope.$confirm("删除教材","您确定要删除教材["+book.name+"]及其目录吗？").then(function(modalResult){modalResult&&textbookService["delete"](book.id).then(function(response){response.data?($scope.$alertInfo("删除成功！"),$scope.books.splice(index,1)):$scope.$alertError("删除失败！")})})},$scope.editMode="add",$scope.editBook={};var modalOptions={templateUrl:"views/mdm/textbook/edit.html",controller:"mdm.textbook_index.edit",backdrop:"static",resolve:{param:function(){return{editMode:$scope.editMode,editBook:$scope.editBook}}}};$scope.openAddWindow=function(){$scope.editBook={},$scope.editMode="add";$uibModal.open(modalOptions).result.then(function(result){$scope.books.unshift(result),$scope.totalSize++})},$scope.openEditWindow=function(book){$scope.editMode="edit",$scope.editBook=angular.copy(book);$uibModal.open(modalOptions).result.then(function(result){angular.copy(result,book)})},$scope.getTermName=function(term){return textbookService.getTermName(term)}}).service("textbookService",function($http){var service={},baseUrl="$/textbooks";return service.getAllBooks=function(params){return $http.get(baseUrl,{params:params})},service["delete"]=function(id){return $http["delete"](baseUrl+"/"+id)},service.add=function(book){return $http.post(baseUrl,book)},service.update=function(book){return $http.put(baseUrl+"/"+book.id,book)},service.getBookById=function(id){return $http.get(baseUrl+"/"+id)},service.getTermName=function(term){if(!term)return"";var chTerm="";switch(term.toUpperCase()){case"LAST":chTerm="上册";break;case"NEXT":chTerm="下册";break;default:chTerm=" "}return chTerm},service}),mdmApp.controller("mdm.textbookversion_index",["$scope","$uibModal","textbookVersionService","stageService","orgService",function($scope,$uibModal,textbookVersionService,stageService,orgService){$scope.params={key:"",stageValue:0},stageService.getStages().then(function(response){$scope.stages=response.data}).then(function(){textbookVersionService.getTextbookVersions().then(function(response){$scope.allVersions=response.data,$scope.versions=response.data})}),$scope.filterVersion=function(version){var key=$scope.params.key.trim(),flag=!0;return key&&(flag=version.name.indexOf(key)>-1||version.id.toString().indexOf(key)>-1),$scope.params.stageValue>0&&(flag=flag&&(version.stageSum&$scope.params.stageValue)==$scope.params.stageValue),-1==$scope.params.stageValue&&(flag=flag&&"G54"==version.gradeDivision),flag},$scope.openEditVersion=function(editVersion){var copy={};editVersion&&angular.copy(editVersion,copy);var editMode=editVersion?"edit":"add",stagesCopy=angular.copy($scope.stages);editVersion&&angular.forEach(stagesCopy,function(item,index){(item.value&editVersion.stageSum)==item.value&&(item.checked=!0)}),$uibModal.open({templateUrl:"views/mdm/textbookversion/edit.html",controller:"mdm.textbookversion_index.edit",resolve:{params:function(){return{editMode:editMode,version:copy,stages:stagesCopy}}},backdrop:"static"}).result.then(function(rltVersion){"edit"==editMode?angular.copy(rltVersion,editVersion):$scope.versions.push(rltVersion)})},$scope.delVersion=function(version){$scope.$confirm("删除确认","您确定要删除教材版本【"+version.name+"】吗? 注意此操作不可恢复！").then(function(){textbookVersionService.deleteTextbookVersion(version.id).then(function(){var index=$scope.versions.indexOf(version);$scope.versions.splice(index,1),$scope.$alertInfo("删除成功！")})})}}]).controller("mdm.textbookversion_index.edit",function($log,$scope,textbookVersionService,params){$scope.editMode=params.editMode,$scope.version=params.version,$scope.stages=params.stages,$scope.hasCheckedStage=function(){return $scope.stages.some(function(item){return item.checked})},$scope.submitForm=function(){if(!$scope.form.$invalid){$scope.version.stageSum=$scope.stages.reduce(function(prev,next){return prev+(next.checked?next.value:0)},0),$scope.version.gradeDivision=$scope.version.isG54?"G54":"G63";var p;p="add"==$scope.editMode?textbookVersionService.addTextbookVersion($scope.version):textbookVersionService.updateTextbookVersion($scope.version),p.then(function(response){$scope.$alertInfo("保存成功!"),response&&$scope.$close("add"==$scope.editMode?response.data:$scope.version)})}}}).service("textbookVersionService",["$http",function($http){var textbookVersionUrl="$/textbook/versions",courseUrlTmpl="$/courses/{courseId}/textbookversions";return{getTextbookVersions:function(stageId){return $http.get(textbookVersionUrl,{params:{stageid:stageId||""}})},getTextbookVersionsByCourseId:function(courseId){return $http.get(courseUrlTmpl.replace("{courseId}",courseId))},updateTextbookVersion:function(version){return $http.put(textbookVersionUrl+"/"+version.id,version)},addTextbookVersion:function(version){return $http.post(textbookVersionUrl,version)},deleteTextbookVersion:function(id){return $http["delete"](textbookVersionUrl+"/"+id)}}}]),mdmApp.service("dpService",function(subject){var services={};return services.allowed=function(inputExp){return inputExp="mdm.data:"+inputExp+":r",subject.isPermitted(inputExp)},services}),mdmApp.controller("mdm.user_index.assign_roles",function($scope,applicationService,roleService,userService,param){function getCheckedMenuRoles(){userService.getRolesByUserId(param.userId,"MENU",$scope.selectedApp.id).then(function(response){var ownedRoleIds=response.data;angular.forEach($scope.menuRoles,function(value,key){value.checked=ownedRoleIds.indexOf(value.id)>=0})})}function stepIntoDataRolePane(){roleService.getRoles($scope.selectedApp.id,"DATA").then(function(response){return $scope.dataRoles=response.data,null==$scope.dataRoles||0==$scope.dataRoles.length?void $scope.$alertError("该应用还没有定义数据权限，不能进行下一步！"):(getCheckedDataRoles(),void $scope.next())})}function getCheckedDataRoles(){userService.getRolesByUserId(param.userId,"DATA",$scope.selectedApp.id).then(function(response){var ownedRoleIds=response.data;angular.forEach($scope.dataRoles,function(value,key){value.checked=ownedRoleIds.indexOf(value.id)>=0})})}$scope.activeTabIndex=1,$scope.selectedApp=null,$scope.user=param,applicationService.getApplications().then(function(response){$scope.applicationList=response.data,$scope.selectedApp=response.data[0]}),$scope.selectApp=function(app){$scope.selectedApp=app},$scope.prev=function(){$scope.activeTabIndex>1&&$scope.activeTabIndex--},$scope.next=function(){$scope.activeTabIndex<4&&$scope.activeTabIndex++},$scope.stepOutMenuRolePane=function(){var checkedRoles=$scope.menuRoles.filter(function(role){return role.checked}).map(function(role){return role.id});return 0==checkedRoles.length?void $scope.$alertError("至少要为用户选择一个角色！"):void userService.resetRolesByUserId(param.userId,"MENU",checkedRoles,$scope.selectedApp.id).then(function(){$scope.$alertInfo("角色设置成功！"),stepIntoDataRolePane()})},$scope.stepIntoMenuRolePane=function(){roleService.getRoles($scope.selectedApp.id,"MENU").then(function(response){return $scope.menuRoles=response.data,null==$scope.menuRoles||0==$scope.menuRoles.length?void $scope.$alertError("该应用还没有定义角色，不能进行下一步！"):(getCheckedMenuRoles(),void $scope.next())})},$scope.selectRole=function(role){role.checked=!role.checked},$scope.stepOutDataRolePane=function(){var checkedRoles=$scope.dataRoles.filter(function(role){return role.checked}).map(function(role){return role.id});return 0==checkedRoles.length?void $scope.$alertError("至少要为用户选择一个数据权限！"):void userService.resetRolesByUserId(param.userId,"DATA",checkedRoles,$scope.selectedApp.id).then(function(){$scope.$alertInfo("数据权限设置成功！"),$scope.next()})}}),mdmApp.controller("mdm.user_index?appId",function($log,$stateParams,$scope,$uibModal,appConstants,applicationService,userService){$scope.params={},$scope.params.currentPage=1,$scope.params.pageSize=appConstants.pageSize,$scope.totalSize=0,$scope.totalPage=0,$stateParams.appId&&($scope.params.appId=$stateParams.appId),applicationService.getApplications().then(function(response){$scope.apps=response.data}),$scope.listUsers=function(keyEvent){keyEvent&&13!=keyEvent.which||($scope.params.username&&($scope.params.username=$scope.params.username.trim()),userService.getUsers($scope.params).then(function(response){$scope.users=response.data.items,$scope.params.currentPage=response.data.currentPage,$scope.params.pageSize=response.data.pageSize,$scope.totalSize=response.data.totalSize,$scope.totalPage=response.data.totalPage}))},$scope.listUsers(),$scope.pageChanged=function(pageNo){$scope.currentPage=pageNo,$scope.listUsers()},$scope.openEditUser=function(editUser){var copy={};editUser&&angular.copy(editUser,copy),$uibModal.open({templateUrl:"views/mdm/user/edit.html",controller:"mdm.user_index.edit",resolve:{param:function(){return{user:copy}}}}).result.then(function(rltUser){angular.copy(rltUser,editUser)})},$scope.openAddUser=function(){$uibModal.open({templateUrl:"views/mdm/user/reg_user.html",controller:"mdm.user_index.reg_user",backdrop:"static"}).result.then(function(rltUser){$scope.users.splice(0,0,rltUser),$scope.totalSize=$scope.totalSize+1,$scope.$confirm("继续为"+rltUser.username+"授权","接下来您需要设置用户的角色和数据访问权限。 如果您现在没有时间，也可以稍后在列表中点击 [授权] 按钮来完成！").then(function(){$scope.openModalForAssignRoles(rltUser)},function(){$scope.$alertWarning("提醒：不要忘了给用户设置合适的角色和权限！")})})},$scope.openModalForAssignRoles=function(user){$uibModal.open({templateUrl:"views/mdm/user/assign_roles.html",controller:"mdm.user_index.assign_roles",backdrop:"static",resolve:{param:function(){return{userId:user.id,userName:user.username}}}})},$scope.del=function(user){$scope.$confirm("删除确认","您确定要删除用户【"+user.username+"】吗?").then(function(){userService.deleteUser(user.id).then(function(){var index=$scope.users.indexOf(user);$scope.users.splice(index,1),$scope.$alertInfo("删除成功！"),$scope.totalSize=$scope.totalSize-1})})}}).controller("mdm.user_index.edit",function($scope,userService,param){$scope.user=param.user,$scope.submitForm=function(){$scope.form.$invalid||userService.updateUser($scope.user).then(function(res){$scope.$alertInfo("保存成功!"),res&&$scope.$close(res.data)})}}).service("userService",["$http",function($http){var userSrv={},userUrl="$/users",xkwUserUrl="$/xkwusers";return userSrv.getUsers=function(params){return $http.get(userUrl,{params:params})},userSrv.getXkwUser=function(username){return $http.get(xkwUserUrl+"/"+username)},userSrv.addUser=function(user){return $http.post(userUrl,user)},userSrv.updateUser=function(user){return $http.put(userUrl+"/"+user.id,user)},userSrv.deleteUser=function(id){return $http["delete"](userUrl+"/"+id)},userSrv.getUserByName=function(username){return $http.get(userUrl+"/"+username)},userSrv.getUserByNameForReg=function(username){return $http.get(userUrl+"/regcheck/"+username)},userSrv.getRolesByUserId=function(userId,roleType,appId){return $http.get(userUrl+"/"+userId+"/"+appId+"/"+roleType+"/roles")},userSrv.resetRolesByUserId=function(userId,roleType,roleIds,appId){return $http.put(userUrl+"/"+userId+"/"+appId+"/"+roleType+"/roles",roleIds)},userSrv.getCurrentUser=function(){return $http.get("$/loginuser")},userSrv}]),mdmApp.controller("mdm.user_index.reg_user",function($scope,userService){$scope.userName="",$scope.validUserName=!1,$scope.user=null,$scope.queryUser=function(){$scope.user=null,$scope.validUserName=!1,$scope.queryForm.$invalid||userService.getUserByNameForReg($scope.userName).then(function(response){$scope.user=response.data,$scope.validUserName=!0})},$scope.isRegistering=!1,$scope.regUser=function(){return $scope.editForm.$invalid?void($scope.editForm.$submitted=!0):($scope.isRegistering=!0,void userService.addUser($scope.user).then(function(res){$scope.$alertInfo("注册成功!");var user=res.data;$scope.$close(user)},function(){$scope.isRegistering=!1}))},$scope.changeUser=function(){$scope.user=null,$scope.validUserName=!1}}),qbmApp.directive("areaSelector",function(mdService){return{templateUrl:"directives/areaselector/areaselector.html",restrict:"AE",replace:!0,scope:{areaId:"=",areaLevel:"=",width:"@"},compile:function(){return{pre:function(scope,element,attrs){element.on("click","[data-stopPropagation]",function(e){e.stopPropagation()}).css("width",(scope.width||200)+"px");var wrapper=element.find(".input-group-btn:first"),dropdown=element.find(".dropdown-menu:first"),wrapperPositionLeft=element.offset().left;$(window).width()-wrapperPositionLeft<500&&dropdown.css({right:0,left:"auto"}),scope.closePanel=function(){wrapper.removeClass("open")},scope.openPanel=function(){wrapper.addClass("open"),wrapper.attr("aria-haspopup","true"),wrapper.attr("aria-expanded","true")},element.find("input.area-selector-input").on("focus click",function(){return scope.openPanel(),!1})},post:function(scope,element,attrs){mdService.getAreas().then(function(response){if(scope.allData=response.data,scope.provinces=scope.getProvinces(),scope.areaId){var county,city,province,isProv=!!parseInt((scope.areaId+"").substring(0,2)),isCity=!!parseInt((scope.areaId+"").substring(2,4)),isCounty=!!parseInt((scope.areaId+"").substring(4,6));isCounty?(county=scope.getAreaObject(scope.areaId),city=scope.getAreaObject(county.parentId),province=scope.getAreaObject(city.parentId)):isCity?(city=scope.getAreaObject(scope.areaId),province=scope.getAreaObject(city.parentId)):isProv&&(province=scope.getAreaObject(scope.areaId)),isProv&&(scope.selectProvince(province),isCity&&(scope.selectCity(city),isCounty&&scope.selectCounty(county)))}})}}},controller:function($scope){$scope.expanded=!1,$scope.cities=[],$scope.counties=[],$scope.flag={currentTag:"province",selectedProvince:null,selectedCity:null,selectedCounty:null},$scope.result={selectedName:""},$scope.getProvinces=function(){var provinces=[];return angular.forEach($scope.allData,function(value,key){"PROVINCE"==value.level&&provinces.push(value)}),provinces},$scope.getAreaData=function(parentId){var data=[];for(var index in $scope.allData)$scope.allData[index].parentId==parentId&&data.push($scope.allData[index]);return data},$scope.getAreaObject=function(id){var obj=null;for(var value in $scope.allData)if($scope.allData[value].id==id){obj=$scope.allData[value];break}return obj},$scope.selectProvince=function(argument){$scope.flag.selectedCity=null,$scope.counties=[],$scope.cities=$scope.getAreaData(argument.id),$scope.flag.selectedProvince=argument,1==$scope.cities.length?$scope.selectCity($scope.cities[0]):argument.id<10?$scope.closePanel():($scope.flag.currentTag="city",$scope.areaLevel="province"),$scope.areaId=argument.id},$scope.selectCity=function(argument){$scope.flag.selectedCounty=null,$scope.counties=$scope.getAreaData(argument.id),$scope.flag.selectedCity=argument,$scope.flag.currentTag="county",$scope.areaLevel="city",$scope.areaId=argument.id},$scope.selectCounty=function(argument){$scope.flag.selectedCounty=argument,$scope.areaLevel="county",$scope.areaId=argument.id,$scope.closePanel()},$scope.tabTo=function(value){parseInt(value)!==$scope.flag.currentTag&&($scope.flag.currentTag=value)},$scope.areaClear=function(){$scope.cities=[],$scope.counties=[],$scope.areaLevel="",$scope.areaId="",$scope.result.selectedName="",$scope.flag.currentTag="province",$scope.flag.selectedProvince=null,$scope.closePanel()},$scope.$watch("flag",function(){$scope.flag.selectedProvince&&($scope.result.selectedName=$scope.flag.selectedProvince.name,$scope.flag.selectedCity&&($scope.flag.selectedCity.shortName!==$scope.flag.selectedProvince.shortName?$scope.result.selectedName+=" / "+$scope.flag.selectedCity.name:$scope.result.selectedName=$scope.flag.selectedCity.name,$scope.flag.selectedCounty&&($scope.result.selectedName+=" / "+$scope.flag.selectedCounty.name)))},!0)}}}),angular.module("mdmApp").directive("chat",function(){return{templateUrl:"directives/chat/chat.html",restrict:"E",replace:!0}}),angular.module("mdmApp").directive("stats",function(){return{templateUrl:"directives/dashboard/stats/stats.html",restrict:"E",replace:!0,scope:{model:"=",comments:"@",number:"@",name:"@",colour:"@",details:"@",type:"@","goto":"@"}}}),angular.module("mdmApp").directive("headerNotification",function(){return{templateUrl:"directives/header/header-notification/header-notification.html",restrict:"E",replace:!0,controller:function($scope,$uibModal,userService){$scope.openEditModal=function(){if($scope.loginUser){var copy={};angular.copy($scope.loginUser,copy),$uibModal.open({templateUrl:"views/mdm/user/edit.html",controller:"mdm.user_index.edit",resolve:{param:function(){return{user:copy}}}}).result.then(function(rltUser){angular.copy(rltUser,$scope.loginUser)})}},userService.getCurrentUser().then(function(response){$scope.loginUser=response.data})}}}),angular.module("mdmApp").directive("header",function(){return{templateUrl:"directives/header/header.html",restrict:"E",replace:!0,link:function(scope,element){element.find(".menu-control").on("click",function(){$("body").toggleClass("mini-navbar")})}}}),angular.module("mdmApp").directive("notifications",function(){return{templateUrl:"directives/notifications/notifications.html",restrict:"E",replace:!0}}),angular.module("mdmApp").directive("pageList",function(){return{scope:{totalSize:"="},template:'<div class="text-muted mart10 pull-left">共 {{totalSize}} 条记录</div>',replace:!0,restrict:"EA"}}),mdmApp.directive("permissionBuilder",function($timeout){return{restrict:"A",templateUrl:"directives/permission/permissionbuilder.html",replace:!1,scope:{shiroExps:"=",permissionTree:"="},controller:function($scope){function onCheckHandler(event,treeId,treeNode){var tempShiroExps=[],ztree=$.fn.zTree.getZTreeObj(treeId),checkedNodes=ztree.getCheckedNodes(!0);for(var idx in checkedNodes){var node=checkedNodes[idx];if(!node.getCheckStatus().half){var parentNode=node.getParentNode();(null==parentNode||parentNode.getCheckStatus().half)&&buildShiroExp(node,tempShiroExps)}}$timeout(function(){$scope.shiroExps=tempShiroExps})}function checkNodesByShiroExps(){if(!angular.isArray($scope.shiroExps))return void($scope.shiroExps=[]);var ztree=$.fn.zTree.getZTreeObj($scope.ztreeId);if(ztree)for(var idx in $scope.shiroExps){var exp=$scope.shiroExps[idx];checkNodesByOneShiroExp(ztree,exp)}}function checkNodesByOneShiroExp(ztree,exp){var parts=exp.split(":"),parentNode=null;for(var partIdx in parts){var isLeaf=partIdx==parts.length-1,part=parts[partIdx],tinyParts=isLeaf?part.split(","):[part],nodes=[];if(nodes=null==parentNode?ztree.getNodes():parentNode.children,!nodes||0==nodes.length)return;for(var nIdx in nodes){var node=nodes[nIdx];if(isLeaf){if("*"==part){ztree.checkNode(parentNode,!0,!0);break}tinyParts.indexOf(node.value)>=0&&ztree.checkNode(node,!0,!0)}else if(node.value==part){parentNode=node;break}}}}function buildShiroExp(node,shiroExps){var path=node.getPath(),exp="";for(var idx in path){var pathNode=path[idx];pathNode.getCheckStatus().half&&idx<path.length-1&&buildShiroExp(pathNode,shiroExps),exp.length>0&&(exp+=":"),exp+=path[idx].value}node.getCheckStatus().half&&(exp+=":r"),shiroExps.indexOf(exp)>=0||shiroExps.push(exp)}$scope._isInitialized=!1,$scope.ztreeId=Math.random().toString().replace("0.","ztree"),$scope.settings={data:{simpleData:{enable:!0,idKey:"id",pIdKey:"parentId"}},check:{enable:!0},callback:{onCheck:onCheckHandler}},$scope.onTreeInitialized=function(){checkNodesByShiroExps()},this.checkNodesByShiroExps=checkNodesByShiroExps},link:function(scope,element,attrs,ctrl){scope.$watch("shiroExps",function(newValue,oldValue){$timeout(function(){ctrl.checkNodesByShiroExps()})})}}}),angular.module("mdmApp").directive("sidebarSearch",function(){return{templateUrl:"directives/sidebar/sidebar-search/sidebar-search.html",restrict:"E",replace:!0,scope:{},controller:function($scope){$scope.selectedMenu="home"}}}),angular.module("mdmApp").directive("sidebar",["$location","$timeout","subject",function($location,$timeout,subject){return{templateUrl:"directives/sidebar/sidebar.html",restrict:"E",replace:!0,scope:{},controller:function($scope){$scope.selectedMenu="mdm",$scope.collapseVar=0,$scope.multiCollapseVar=0,$scope.check=function(x){x==$scope.collapseVar?$scope.collapseVar=0:$scope.collapseVar=x},$scope.multiCheck=function(y){y==$scope.multiCollapseVar?$scope.multiCollapseVar=0:$scope.multiCollapseVar=y}},link:function($scope){$scope.$watch(function(){return subject.authenticated},function(newValue,oldValue){$timeout(function(){$("#side-menu").metisMenu();var url=window.location,element=$("#side-menu a").filter(function(){return this.href==url.href.substr(0,-1==url.href.indexOf("?")?void 0:url.href.indexOf("?"))});element.parent().addClass("active").closest("ul").addClass("in").parent().addClass("active"),window.__selectMenuTargetUri&&(selectMenu(window.__selectMenuTargetUri),delete window.__selectMenuTargetUri)})}),window.addEventListener("hashchange",function(){var url=window.location,element=$("#side-menu a").filter(function(){return this.href==url.href.substr(0,-1==url.href.indexOf("?")?void 0:url.href.indexOf("?"))});0!=element.length&&($("#side-menu .active,#side-menu .in").each(function(){$(this).removeClass("active"),$(this).removeClass("in")}),element.parent().addClass("active").closest("ul").addClass("in").parent().addClass("active"))})}}}]),angular.module("mdmApp").directive("timeline",function(){return{templateUrl:"directives/timeline/timeline.html",restrict:"E",replace:!0}}),angular.module("ngzTree",[]).directive("zTree",["$timeout",function($timeout){return{restrict:"A",scope:{setting:"=",zNodes:"=",initialized:"=onInitialized"},link:function(scope,element,attrs){$timeout(function(){$.fn.zTree.init(element,scope[attrs.setting],scope[attrs.zNodes]),scope.initialized&&scope.initialized()}),scope.$watch("zNodes",function(newValue,oldValue){$timeout(function(){$.fn.zTree.init(element,scope.setting,newValue),scope.initialized&&scope.initialized()})})}}}]);